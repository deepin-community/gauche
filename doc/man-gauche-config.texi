@c To be included from program.texi
@c Generated by gen-genconfig.scm.  DO NOT EDIT.
@c EN
General parameter:
@c JP
一般のパラメータ:
@c COMMON
@table @option
@item -V
@c EN
The current Gauche version.
@c JP
現在のGaucheのバージョン
@c COMMON
@end table

@c EN
Parameters to compile applications using Gauche:
@c JP
Gaucheを使ったアプリケーションのコンパイルのためのパラメータ:
@c COMMON
@table @option
@item -I
@c EN
Include path options required to compile programs using Gauche
(Note: This doesn't work if Gauche installation directory
path contains whitespaces.  See --incdirs below.)
@c JP
Gaucheを使ったプログラムをコンパイルするのに必要なインクルードパスオプション
(Gaucheのインストール先のパスが空白を含んでいる場合、これは
      使えません。下の--incdirsを見てください。)
@c COMMON
@item -L
@c EN
Library path options required to link programs using Gauche
(Note: This doesn't work if Gauche installation directory
path contains whitespaces.  See --archdirs below.)
@c JP
Gaucheを使ったプログラムをコンパイルするのに必要なライブラリパスオプション
(Gaucheのインストール先のパスが空白を含んでいる場合、これは
      使えません。下の--incdirsを見てください。)
@c COMMON
@item -l
@c EN
Link library options required to link programs using Gauche.
@c JP
Gaucheを使ったプログラムをリンクする時に必要なライブラリオプション
@c COMMON
@item --cc
@c EN
The name of the C compiler used to compile this Gauche.
@c JP
このGaucheをコンパイルする時に使われたCコンパイラ名
@c COMMON
@item --cpp
@c EN
The command to run the C preprocessor.
@c JP
Cプリプロセッサを走らせるコマンド
@c COMMON
@item --ac
@c EN
The directory that contains Gauche-specific autoconf macros.
@c JP
Gauche用のautoconfマクロがインストールされているディレクトリ名
@c COMMON
@item --reconfigure
@c EN
The command line used to configure the current installation.
@c JP
現在インストールされているGaucheに使われたconfigureのオプション
@c COMMON
@item --arch
@c EN
The autoconf-style architecture signature (cpu-vendor-kernel-os).
@c JP
autoconf形式のアーキテクチャシグネチャ (cpu-vendor-kernel-os)
@c COMMON
@item --incdirs
@itemx --archdirs
@c EN
The list of directory names to be looked for include files and
libraries, respectively.  Each directory name may be quoted if
it contains whitespaces, and separated by ':' on Unix platforms, or
by ';' on Windows platforms.
@c JP
それぞれ、インクルードファイルとライブラリファイルが探されるディレクトリのリスト。
各ディレクトリ名は、それが空白を含んでいる場合はクオートされています。また、
それぞれのディレクトリ名の間はUnixでは ':'、Windowsでは ';' で区切られています。
@c COMMON
@item --local-incdir
@itemx --local-libdir
@c EN
These are '-I' and '-L' flags for additional local headers/libraries
to search, given by '--with-local' configure flags.  Note that those
are also included in '-I', '-L', '--incdirs', and '--archdirs'.
@c JP
これらは、追加のローカルヘッダファイルやライブラリファイルを探すために必要な
'-I' および '-L' フラグのリストです。これらはconfigure時の '--with-local' 
オプションにより設定されます。追加のローカルディレクトリは、'-I'、'-L'、'--incdirs'
'--arcdirs' の出力にも含まれます。
@c COMMON
@end table

@c EN
Parameters to install files:
@c JP
ファイルをインストールするためのパラメータ:
@c COMMON
@table @option
@item --prefix
@c EN
The directory prefix set by configure.
@c JP
configure時に設定されたディレクトリプレフィクス
@c COMMON
@item --sysincdir
@itemx --siteincdir
@itemx --pkgincdir
@c EN
Directories where system|site|package header files of extensions go.
@c JP
それぞれ、システム/サイト/パッケージレベルの拡張モジュールヘッダファイルが
インストールされるべきディレクトリ
@c COMMON
@item --syslibdir
@itemx --sitelibdir
@itemx --pkglibdir
@c EN
Directories where system|site|package scheme files go.
@c JP
それぞれ、システム/サイト/パッケージのSchemeファイルがインストールされる
べきディレクトリ
@c COMMON
@item --sysarchdir
@itemx --sitearchdir
@itemx --pkgarchdir
@c EN
Directories where system|site|package DSO files go.
@c JP
それぞれ、システム/サイト/パッケージのDSOファイルがインストールされる
べきディレクトリ
@c COMMON
@item --mandir
@itemx --infodir
@c EN
Directories where gauche manpage and info docs are installed.
@c JP
それぞれ、Gaucheのmanpageとinfoドキュメントがインストールされるべきディレクトリ
@c COMMON
@end table

@c EN
Parameters to help building extensions:
@c JP
拡張モジュールをビルドするためのパラメータ:
@c COMMON
@table @option
@item --object-suffix
@c EN
The extension of the compiled objects (e.g. 'o' or 'obj').
@c JP
コンパイルされたオブジェクトファイルの拡張子 (例: 'o' や 'obj')
@c COMMON
@item --executable-suffix
@c EN
The extension of the executable including a period (empty on Unix systems,
'.exe' on Windows.
@c JP
実行可能ファイルの拡張氏(ピリオドを含む)。Unixシステムでは空文字列、
      Windowsでは '.exe'。
@c COMMON
@item --so-suffix
@c EN
The extension for dynamically loadable (dlopen-able) modules (e.g. 'so').
@c JP
動的ロード(dlopen)可能なファイルの拡張子 (例: 'so')
@c COMMON
@item --so-cflags
@c EN
Additional CFLAGS to create dynamically loadable modules.
@c JP
動的ロード可能なファイルを作るために追加で必要なCFLAGS
@c COMMON
@item --so-ldflags
@c EN
Additional LDFLAGS to create dynamically loadable modules.
@c JP
動的ロード可能なファイルを作るために追加で必要なLDFLAGS
@c COMMON
@item --so-libs
@c EN
Additional libraries required to create dynamically loadable modules.
@c JP
動的ロード可能なファイルを作るために追加で必要なライブラリ
@c COMMON
@item --dylib-suffix
@c EN
The extension for dynamically linked libraries (as opposed to dlopen()ed)
Usually the same as --so-suffix, but OSX wants 'dylib'.
@c JP
動的リンクされる (dlopenされるのではない) ライブラリファイルの拡張子。
通常は--so-suffixと同じだが、OSXでは 'dylib'。
@c COMMON
@item --dylib-ldflags
@c EN
LDFLAGS to create dynamically linked libraries.
@c JP
動的リンクされるライブラリファイルを作るのに必要なLDFLAGS。
@c COMMON
@item --rpath-flag
@c EN
Compiler flag(s) to embed RPATH
@c JP
RPATHを埋め込むためのコンパイラフラグ
@c COMMON
@item --default-cflags
@c EN
This is the CFLAGS used to compile Gauche, and to be used to compile
extensions as well.
@c JP
Gaucheをコンパイルする時に使われたCFLAGS。拡張モジュールをコンパイルする時にも
同じフラグを使うべき。
@c COMMON
@item --cppflags
@c EN
Compiler flag(s) passed to C preprocessor
@c JP
Cプリプロセッサに渡されるコンパイラフラグ
@c COMMON
@item --static-libs
@c EN
List of library link flags ('-llib') required to link Gauche statically.
Similar to '-l', but this includes the libraries that are used
for extension modules, and also the static library itself,
that is -lgauche-static-X.X.
@c JP
Gaucheを静的リンクする時に必要なリンクフラグ ('-llib') のリスト。
'-l' と似ているが、これは拡張モジュールが必要とするライブラリ、
及びGaucheの静的ライブラリ本体('-lgauche-static-X.X')を含んでいる。
@c COMMON
@item --libgauche-so
@c EN
The base name of dynamically linked libgauche.
@c JP
動的リンクされるlibgaucheのbasename
@c COMMON
@end table
